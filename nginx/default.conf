
# Define request limit
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

# Default server to catch all requests that don't match the domain
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name _;
    ssl_reject_handshake on;
    return 444;
}
# Port 80
server {
  listen 80;
  listen [::]:80;
  server_name westminster-abi.org www.westminster-abi.org;
  return 301 https://$host$request_uri;
}
# Port 443
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name westminster-abi.org www.westminster-abi.org;
  # SSL configuration -> https://nginx.org/en/docs/http/ngx_http_ssl_module.html
  ssl_certificate /etc/letsencrypt/live/westminster-abi.org/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/westminster-abi.org/privkey.pem;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  # Recommended ciphers until 2030 for TLS1.3 -> https://wiki.openssl.org/index.php/TLS1.3
  # Recommended ciphers for TLS1.2 for broad compatibility -> https://developers.cloudflare.com/ssl/edge-certificates/additional-options/cipher-suites/recommendations/
  ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_session_tickets off;
  ssl_stapling on;                                                                  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/live/westminster-abi.org/fullchain.pem;
  resolver 1.1.1.1 1.0.0.1 valid=300s;
  resolver_timeout 5s;

  # Security headers -> https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers
  # This header tells the browser to only use HTTPS and chaches the directive for 2 years
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  # This header disables usage in iframes and embeds
  add_header X-Frame-Options DENY;
  # This header tells the browser to not sniff the content type
  add_header X-Content-Type-Options nosniff always;
  # This enables the built-in XSS filter in the browser
  add_header X-XSS-Protection "1; mode=block";
  # This header tells the browser to only send the referrer to the same origin
  add_header Referrer-Policy "strict-origin-when-cross-origin";

  location / {
    # Apply request limit
    limit_req zone=mylimit burst=5 nodelay;
    # Proxy to the app service
    proxy_pass http://stack-the-letter-service:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
  }
  # This would apply a stricter request limit to the /login route
  # location /login {
  #   limit_req zone=mylimit burst=3;
  # }
}
